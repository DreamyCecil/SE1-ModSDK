// This file is generated by Entity Class Compiler, (c) 2002-2012 Croteam Ltd.

#ifndef _EntitiesV_Camera_INCLUDED
#define _EntitiesV_Camera_INCLUDED 1
#include <EntitiesV/Player.h>
#include <EntitiesV/CameraMarker.h>
#define CCamera_ClassID 220
extern "C" DECL_DLL CDLLEntityClass CCamera_DLLClass;
class CCamera : public CMovableModelEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
virtual BOOL IsImportant(void) const { return TRUE; };
  DECL_DLL virtual void SetDefaultProperties(void);
  FLOAT m_tmTime;
  FLOAT m_fFOV;
  FLOAT m_fLastFOV;
  CEntityPointer m_penTarget;
  CTString m_strName;
  CEntityPointer m_penOnBreak;
  BOOL m_bWideScreen;
  FLOAT m_tmAtMarker;
  FLOAT m_tmDelta;
  FLOAT3D m_vPNp0;
  FLOAT3D m_vPNp1;
  FLOAT3D m_vTNp0;
  FLOAT3D m_vTNp1;
  FLOAT m_fFOVp0;
  FLOAT m_fFOVp1;
  FLOAT m_fTFOVp0;
  FLOAT m_fTFOVp1;
  FLOATquat3D m_qPNp0;
  FLOATquat3D m_qPNp1;
  FLOATquat3D m_qANp0;
  FLOATquat3D m_qANp1;
  CEntityPointer m_penLast;
  CEntityPointer m_penPlayer;
  CTString m_strDescription;
  BOOL m_bStopMoving;
  COLOR m_colFade0;
  COLOR m_colFade1;
  BOOL m_bMoving;
  CEntityPointer m_penViewTarget0;
  CEntityPointer m_penViewTarget1;
  FLOAT3D m_vPosRatio0;
  FLOAT3D m_vPosRatio1;
  FLOAT m_fMyTimer;
  FLOAT m_fMyTimerLast;
  BOOL m_bIgnoreTimeStretch;
  BOOL m_bAutoRotation;
  FLOAT m_fStartHdg;
  FLOAT m_fRotateSpeed;
  FLOAT m_fRotateTime;
  FLOAT m_fRadX;
  FLOAT m_fHeight;
  FLOAT m_fRadZ;
  CEntityPointer m_penAutoCameraEndTarget;
  enum EventEType m_eetAutoCameraEndEvent;
  FLOAT3D m_vRelTargetOffset;
   void RenderParticles(void);
   BOOL MovesByTargetedRoute(CTString & strTargetProperty)const;
   BOOL DropsMarker(CTFileName & fnmMarkerClass,CTString & strTargetProperty)const;
   const CTString & GetDescription(void)const;
   void GetAutoRotatePlacement(FLOAT tmCurrent,FLOAT3D & vPos,FLOATmatrix3D & mRot,CPlacement3D & plNew,FLOAT3D vTarget)const;
   CPlacement3D GetLerpedPlacement(void)const;
   void CalcTargetedRotation(const FLOAT3D & vMyPos,CEntity * penViewTarget,FLOAT3D vPosRatio,FLOATmatrix3D & mRotTarget,BOOL bLerping)const;
   void PreMoving();
   void DoMoving();
   void PostMoving();
#define  STATE_CCamera_PlayStaticCamera 0x00dc0000
  BOOL PlayStaticCamera(const CEntityEvent &__eeInput);
  BOOL H0x00dc0001_PlayStaticCamera_01(const CEntityEvent &__eeInput);
  BOOL H0x00dc0002_PlayStaticCamera_02(const CEntityEvent &__eeInput);
#define  STATE_CCamera_PlayAutoRotatingCamera 0x00dc0003
  BOOL PlayAutoRotatingCamera(const CEntityEvent &__eeInput);
  BOOL H0x00dc0004_PlayAutoRotatingCamera_01(const CEntityEvent &__eeInput);
  BOOL H0x00dc0005_PlayAutoRotatingCamera_02(const CEntityEvent &__eeInput);
#define  STATE_CCamera_PlayMovingCamera 0x00dc0006
  BOOL PlayMovingCamera(const CEntityEvent &__eeInput);
  BOOL H0x00dc0007_PlayMovingCamera_01(const CEntityEvent &__eeInput);
  BOOL H0x00dc0008_PlayMovingCamera_02(const CEntityEvent &__eeInput);
#define  STATE_CCamera_PlayCamera 0x00dc0009
  BOOL PlayCamera(const CEntityEvent &__eeInput);
#define  STATE_CCamera_Main 1
  BOOL Main(const CEntityEvent &__eeInput);
  BOOL H0x00dc000a_Main_01(const CEntityEvent &__eeInput);
  BOOL H0x00dc000b_Main_02(const CEntityEvent &__eeInput);
  BOOL H0x00dc000c_Main_03(const CEntityEvent &__eeInput);
  BOOL H0x00dc000d_Main_04(const CEntityEvent &__eeInput);
  BOOL H0x00dc000e_Main_05(const CEntityEvent &__eeInput);
  BOOL H0x00dc000f_Main_06(const CEntityEvent &__eeInput);
  BOOL H0x00dc0010_Main_07(const CEntityEvent &__eeInput);
};
#endif // _EntitiesV_Camera_INCLUDED
