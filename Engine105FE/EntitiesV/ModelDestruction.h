// This file is generated by Entity Class Compiler, (c) 2002-2012 Croteam Ltd.

#ifndef _EntitiesV_ModelDestruction_INCLUDED
#define _EntitiesV_ModelDestruction_INCLUDED 1
#include <EntitiesV/ModelHolder2.h>
#include <EntitiesV/BasicEffects.h>
#include <EntitiesV/Debris.h>
#include <EntitiesV/BloodSpray.h>
#define EVENTCODE_ERangeModelDestruction 0x00d90000
class DECL_DLL ERangeModelDestruction : public CEntityEvent {
public:
ERangeModelDestruction();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(ERangeModelDestruction &e) { e = ERangeModelDestruction(); } ;
extern DECL_DLL CEntityPropertyEnumType DestructionDebrisType_enum;
enum DestructionDebrisType {
  DDT_STONE = 1,
  DDT_WOOD = 2,
  DDT_PALM = 3,
};
DECL_DLL inline void ClearToDefault(DestructionDebrisType &e) { e = (DestructionDebrisType)0; } ;
extern "C" DECL_DLL CDLLEntityClass CModelDestruction_DLLClass;
class CModelDestruction : public CEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
virtual BOOL IsImportant(void) const { return TRUE; };
  DECL_DLL virtual void SetDefaultProperties(void);
  CTString m_strName;
  CTString m_strDescription;
  CEntityPointer m_penModel0;
  CEntityPointer m_penModel1;
  CEntityPointer m_penModel2;
  CEntityPointer m_penModel3;
  CEntityPointer m_penModel4;
  FLOAT m_fHealth;
  enum DestructionDebrisType m_ddtDebris;
  INDEX m_ctDebris;
  FLOAT m_fDebrisSize;
  enum EntityInfoBodyType m_eibtBodyType;
  enum SprayParticlesType m_sptType;
   void Precache(void);
   const CTString & GetDescription(void)const;
   void CheckOneModelTarget(CEntityPointer & pen);
   class CModelHolder2 * GetNextPhase(void);
   INDEX GetModelsCount(void)const;
   class CModelHolder2 * GetModel(INDEX iModel);
   void SpawnDebris(CModelHolder2 * penModel);
#define  STATE_CModelDestruction_Main 1
  BOOL Main(const CEntityEvent &__eeInput);
};
#endif // _EntitiesV_ModelDestruction_INCLUDED
