// This file is generated by Entity Class Compiler, (c) 2002-2012 Croteam Ltd.

EP_ENUMBEG(BlockAction)
  EP_ENUMVALUE(BA_NONE, "None"),
  EP_ENUMVALUE(BA_BOUNCE, "Bounce"),
  EP_ENUMVALUE(BA_SKIPMARKER, "Skip marker"),
EP_ENUMEND(BlockAction);

EP_ENUMBEG(TouchOrDamageEvent)
  EP_ENUMVALUE(TDE_TOUCHONLY, "Touch Only"),
  EP_ENUMVALUE(TDE_DAMAGEONLY, "Damage Only"),
  EP_ENUMVALUE(TDE_BOTH, "Both"),
EP_ENUMEND(TouchOrDamageEvent);

#define ENTITYCLASS CMovingBrush

CEntityProperty CMovingBrush_properties[] = {
 CEntityProperty(CEntityProperty::EPT_STRING, NULL, (0x00000065<<8)+1, offsetof(CMovingBrush, m_strName), "Name", 'N', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_STRING, NULL, (0x00000065<<8)+2, offsetof(CMovingBrush, m_strDescription), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+3, offsetof(CMovingBrush, m_penTarget), "Target", 'T', C_BLUE  | 0xFF, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+4, offsetof(CMovingBrush, m_bAutoStart), "Auto start", 'A', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+5, offsetof(CMovingBrush, m_fSpeed), "Speed", 'S', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+6, offsetof(CMovingBrush, m_fWaitTime), "Wait time", 'W', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+7, offsetof(CMovingBrush, m_bMoveOnTouch), "Move on touch", 'M', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENUM, &BlockAction_enum, (0x00000065<<8)+8, offsetof(CMovingBrush, m_ebaAction), "Block action", 'B', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+9, offsetof(CMovingBrush, m_fBlockDamage), "Block damage", 'D', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+10, offsetof(CMovingBrush, m_bPlayersOnly), "Players Only", 'P', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+11, offsetof(CMovingBrush, m_bDynamicShadows), "Dynamic shadows", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+12, offsetof(CMovingBrush, m_bVeryBigBrush), "Very Big Brush", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENUM, &EventEType_enum, (0x00000065<<8)+13, offsetof(CMovingBrush, m_eetTouchEvent), "Touch Event - Type", 'U', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+14, offsetof(CMovingBrush, m_penTouchEvent), "Touch Event - Target", 'I', C_dCYAN  | 0xFF, 0),
 CEntityProperty(CEntityProperty::EPT_ENUM, &TouchOrDamageEvent_enum, (0x00000065<<8)+19, offsetof(CMovingBrush, m_tdeSendEventOnDamage), "Send touch event on damage", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+15, offsetof(CMovingBrush, m_penSwitch), "Switch", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENUM, &EventEType_enum, (0x00000065<<8)+16, offsetof(CMovingBrush, m_eetMarkerEvent), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+17, offsetof(CMovingBrush, m_penMarkerEvent), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+18, offsetof(CMovingBrush, m_tmBankingRotation), "Banking rotation speed", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+20, offsetof(CMovingBrush, m_bMoving), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT3D, NULL, (0x00000065<<8)+21, offsetof(CMovingBrush, m_vDesiredTranslation), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE3D, NULL, (0x00000065<<8)+22, offsetof(CMovingBrush, m_aDesiredRotation), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+23, offsetof(CMovingBrush, m_bInverseRotate), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+24, offsetof(CMovingBrush, m_bStopMoving), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+25, offsetof(CMovingBrush, m_bMoveToMarker), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+26, offsetof(CMovingBrush, m_bSkipMarker), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+27, offsetof(CMovingBrush, m_bValidMarker), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+30, offsetof(CMovingBrush, m_fXLimitSign), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+31, offsetof(CMovingBrush, m_fYLimitSign), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+32, offsetof(CMovingBrush, m_fZLimitSign), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE, NULL, (0x00000065<<8)+33, offsetof(CMovingBrush, m_aHLimitSign), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE, NULL, (0x00000065<<8)+34, offsetof(CMovingBrush, m_aPLimitSign), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE, NULL, (0x00000065<<8)+35, offsetof(CMovingBrush, m_aBLimitSign), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT3D, NULL, (0x00000065<<8)+40, offsetof(CMovingBrush, m_vStartTranslation), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE3D, NULL, (0x00000065<<8)+41, offsetof(CMovingBrush, m_aStartRotation), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+42, offsetof(CMovingBrush, m_fCourseLength), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE, NULL, (0x00000065<<8)+43, offsetof(CMovingBrush, m_aHeadLenght), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE, NULL, (0x00000065<<8)+44, offsetof(CMovingBrush, m_aPitchLenght), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ANGLE, NULL, (0x00000065<<8)+45, offsetof(CMovingBrush, m_aBankLenght), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+50, offsetof(CMovingBrush, m_penSoundStart), "Sound start entity", 'Q', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+51, offsetof(CMovingBrush, m_penSoundStop), "Sound stop entity", 'Z', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+52, offsetof(CMovingBrush, m_penSoundFollow), "Sound follow entity", 'F', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_SOUNDOBJECT, NULL, (0x00000065<<8)+53, offsetof(CMovingBrush, m_soStart), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_SOUNDOBJECT, NULL, (0x00000065<<8)+54, offsetof(CMovingBrush, m_soStop), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_SOUNDOBJECT, NULL, (0x00000065<<8)+55, offsetof(CMovingBrush, m_soFollow), "", 0, 0, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+60, offsetof(CMovingBrush, m_penMirror0), "Mirror 0", 'M', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+61, offsetof(CMovingBrush, m_penMirror1), "Mirror 1", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+62, offsetof(CMovingBrush, m_penMirror2), "Mirror 2", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+63, offsetof(CMovingBrush, m_penMirror3), "Mirror 3", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+64, offsetof(CMovingBrush, m_penMirror4), "Mirror 4", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+65, offsetof(CMovingBrush, m_fHealth), "Health", 'H', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+66, offsetof(CMovingBrush, m_bBlowupByBull), "Blowup by Bull", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENUM, &EventEType_enum, (0x00000065<<8)+67, offsetof(CMovingBrush, m_eetBlowupEvent), "Blowup Event - Type", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_ENTITYPTR, NULL, (0x00000065<<8)+68, offsetof(CMovingBrush, m_penBlowupEvent), "Blowup Event - Target", 0, C_BLACK  | 0xFF, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+69, offsetof(CMovingBrush, m_bZoning), "Zoning", 'Z', 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+70, offsetof(CMovingBrush, m_bMoveOnDamage), "Move on damage", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+71, offsetof(CMovingBrush, m_fTouchDamage), "Touch damage", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_COLOR, NULL, (0x00000065<<8)+72, offsetof(CMovingBrush, m_colDebrises), "Color of debrises", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_INDEX, NULL, (0x00000065<<8)+74, offsetof(CMovingBrush, m_ctDebrises), "Debris count", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+75, offsetof(CMovingBrush, m_fCandyEffect), "Debris blow power", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_FLOAT, NULL, (0x00000065<<8)+76, offsetof(CMovingBrush, m_fCubeFactor), "Cube factor", 0, 0x7F0000FFUL, 0),
 CEntityProperty(CEntityProperty::EPT_BOOL, NULL, (0x00000065<<8)+77, offsetof(CMovingBrush, m_bBlowupByDamager), "Blowup by Damager", 0, 0x7F0000FFUL, 0),
};
#define CMovingBrush_propertiesct ARRAYCOUNT(CMovingBrush_properties)

CEntityComponent CMovingBrush_components[] = {
#define MODEL_STONE ((0x00000065<<8)+14)
 CEntityComponent(ECT_MODEL, MODEL_STONE, "EFNM" "Models\\Effects\\Debris\\Stone\\Stone.mdl"),
#define TEXTURE_STONE ((0x00000065<<8)+15)
 CEntityComponent(ECT_TEXTURE, TEXTURE_STONE, "EFNM" "Models\\Effects\\Debris\\Stone\\Stone.tex"),
#define CLASS_DEBRIS ((0x00000065<<8)+16)
 CEntityComponent(ECT_CLASS, CLASS_DEBRIS, "EFNM" "Classes\\Debris.ecl"),
#define CLASS_BASIC_EFFECT ((0x00000065<<8)+4)
 CEntityComponent(ECT_CLASS, CLASS_BASIC_EFFECT, "EFNM" "Classes\\BasicEffect.ecl"),
};
#define CMovingBrush_componentsct ARRAYCOUNT(CMovingBrush_components)

CEventHandlerEntry CMovingBrush_handlers[] = {
 {0x00650002, -1, CEntity::pEventHandler(&CMovingBrush::MoveToMarker),DEBUGSTRING("CMovingBrush::MoveToMarker")},
 {0x00650003, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650003_MoveToMarker_01), DEBUGSTRING("CMovingBrush::H0x00650003_MoveToMarker_01")},
 {0x00650004, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650004_MoveToMarker_02), DEBUGSTRING("CMovingBrush::H0x00650004_MoveToMarker_02")},
 {0x00650005, -1, CEntity::pEventHandler(&CMovingBrush::BounceObstructed),DEBUGSTRING("CMovingBrush::BounceObstructed")},
 {0x00650006, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650006_BounceObstructed_01), DEBUGSTRING("CMovingBrush::H0x00650006_BounceObstructed_01")},
 {0x00650007, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650007_BounceObstructed_02), DEBUGSTRING("CMovingBrush::H0x00650007_BounceObstructed_02")},
 {0x00650008, -1, CEntity::pEventHandler(&CMovingBrush::Rotating),DEBUGSTRING("CMovingBrush::Rotating")},
 {0x00650009, -1, CEntity::pEventHandler(&CMovingBrush::RotInactive),DEBUGSTRING("CMovingBrush::RotInactive")},
 {0x0065000a, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065000a_RotInactive_01), DEBUGSTRING("CMovingBrush::H0x0065000a_RotInactive_01")},
 {0x0065000b, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065000b_RotInactive_02), DEBUGSTRING("CMovingBrush::H0x0065000b_RotInactive_02")},
 {0x0065000c, -1, CEntity::pEventHandler(&CMovingBrush::RotActive),DEBUGSTRING("CMovingBrush::RotActive")},
 {0x0065000d, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065000d_RotActive_01), DEBUGSTRING("CMovingBrush::H0x0065000d_RotActive_01")},
 {0x0065000e, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065000e_RotActive_02), DEBUGSTRING("CMovingBrush::H0x0065000e_RotActive_02")},
 {0x0065000f, -1, CEntity::pEventHandler(&CMovingBrush::MoveBrush),DEBUGSTRING("CMovingBrush::MoveBrush")},
 {0x00650010, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650010_MoveBrush_01), DEBUGSTRING("CMovingBrush::H0x00650010_MoveBrush_01")},
 {0x00650011, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650011_MoveBrush_02), DEBUGSTRING("CMovingBrush::H0x00650011_MoveBrush_02")},
 {0x00650012, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650012_MoveBrush_03), DEBUGSTRING("CMovingBrush::H0x00650012_MoveBrush_03")},
 {0x00650013, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650013_MoveBrush_04), DEBUGSTRING("CMovingBrush::H0x00650013_MoveBrush_04")},
 {0x00650014, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650014_MoveBrush_05), DEBUGSTRING("CMovingBrush::H0x00650014_MoveBrush_05")},
 {0x00650015, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650015_MoveBrush_06), DEBUGSTRING("CMovingBrush::H0x00650015_MoveBrush_06")},
 {0x00650016, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650016_MoveBrush_07), DEBUGSTRING("CMovingBrush::H0x00650016_MoveBrush_07")},
 {0x00650017, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650017_MoveBrush_08), DEBUGSTRING("CMovingBrush::H0x00650017_MoveBrush_08")},
 {0x00650018, -1, CEntity::pEventHandler(&CMovingBrush::H0x00650018_MoveBrush_09), DEBUGSTRING("CMovingBrush::H0x00650018_MoveBrush_09")},
 {0x00650019, -1, CEntity::pEventHandler(&CMovingBrush::TeleportToStopMarker),DEBUGSTRING("CMovingBrush::TeleportToStopMarker")},
 {1, -1, CEntity::pEventHandler(&CMovingBrush::Main),DEBUGSTRING("CMovingBrush::Main")},
 {0x0065001a, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065001a_Main_01), DEBUGSTRING("CMovingBrush::H0x0065001a_Main_01")},
 {0x0065001b, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065001b_Main_02), DEBUGSTRING("CMovingBrush::H0x0065001b_Main_02")},
 {0x0065001c, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065001c_Main_03), DEBUGSTRING("CMovingBrush::H0x0065001c_Main_03")},
 {0x0065001d, -1, CEntity::pEventHandler(&CMovingBrush::H0x0065001d_Main_04), DEBUGSTRING("CMovingBrush::H0x0065001d_Main_04")},
};
#define CMovingBrush_handlersct ARRAYCOUNT(CMovingBrush_handlers)

CEntity *CMovingBrush_New(void) { return new CMovingBrush; };
void CMovingBrush_OnInitClass(void) {};
void CMovingBrush_OnEndClass(void) {};
void CMovingBrush_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) {};
void CMovingBrush_OnWorldEnd(CWorld *pwo) {};
void CMovingBrush_OnWorldInit(CWorld *pwo) {};
void CMovingBrush_OnWorldTick(CWorld *pwo) {};
void CMovingBrush_OnWorldRender(CWorld *pwo) {};
ENTITY_CLASSDEFINITION(CMovingBrush, CMovableBrushEntity, "Moving Brush", "Thumbnails\\MovingBrush.tbn", 0x00000065);
DECLARE_CTFILENAME(_fnmCMovingBrush_tbn, "Thumbnails\\MovingBrush.tbn");
