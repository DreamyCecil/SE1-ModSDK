// This file is generated by Entity Class Compiler, (c) 2002-2012 Croteam Ltd.

#ifndef _EntitiesV_DestroyableArchitecture_INCLUDED
#define _EntitiesV_DestroyableArchitecture_INCLUDED 1
#include <EntitiesV/Devil.h>
#include <EntitiesV/Debris.h>
#include <EntitiesV\GradientMarker.h>
extern "C" DECL_DLL CDLLEntityClass CDestroyableArchitecture_DLLClass;
class CDestroyableArchitecture : public CMovableBrushEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
  DECL_DLL virtual void SetDefaultProperties(void);
  CTString m_strName;
  FLOAT m_fHealth;
  enum EffectorEffectType m_etType;
  FLOAT3D m_vDamageDir;
  FLOAT m_fStretch;
  CEntityPointer m_penGradient;
  COLOR m_colDebrises;
  INDEX m_ctDebrises;
  FLOAT m_fCandyEffect;
  FLOAT m_fCubeFactor;
  BOOL m_bBlowupByDamager;
  FLOAT m_fDustStretch;
   void Precache(void);
   BOOL IsTargetValid(SLONG slPropertyOffset,CEntity * penTarget);
   const CTString & GetGradientName(INDEX iGradient);
   void UncacheShadowsForGradient(class CGradientMarker * penDiscard);
   BOOL GetGradient(INDEX iGradient,class CGradientParameters & fpGradient);
   void ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection);
   void DestroyObelisk();
   void DestroyPylon();
   SLONG GetUsedMemory(void);
#define  STATE_CDestroyableArchitecture_Main 1
  BOOL Main(const CEntityEvent &__eeInput);
  BOOL H0x006b0000_Main_01(const CEntityEvent &__eeInput);
  BOOL H0x006b0001_Main_02(const CEntityEvent &__eeInput);
};

static const char *CDestroyableArchitecture_propnames[] = {
  "m_strName",
  "m_fHealth",
  "m_etType",
  "m_vDamageDir",
  "m_fStretch",
  "m_penGradient",
  "m_colDebrises",
  "m_ctDebrises",
  "m_fCandyEffect",
  "m_fCubeFactor",
  "m_bBlowupByDamager",
  "m_fDustStretch",
};
#define CDestroyableArchitecture_propnamesct ARRAYCOUNT(CDestroyableArchitecture_propnames)

#endif // _EntitiesV_DestroyableArchitecture_INCLUDED
